<?php
session_start();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    $db_host = '193.109.78.59';
    $db_user = 'mysite'; 
    $db_pass = 'Ovmj1yvFil6QEl';     
    $db_name = 'mysite';
    
    // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if ($conn->connect_error) {
        die("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: " . $conn->connect_error);
    }
    
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    $reg_error = '';
    $reg_success = '';
    if (isset($_POST['register'])) {
        $login = trim($_POST['auth_name']);
        $email = trim($_POST['auth_email']);
        $password = trim($_POST['auth_pass']);
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        if (empty($login) || empty($email) || empty($password)) {
            $reg_error = '–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!';
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $reg_error = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email!';
        } else {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $stmt->store_result();
            
            if ($stmt->num_rows > 0) {
                $reg_error = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!';
            } else {
                // –•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);
                
                // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                $stmt = $conn->prepare("INSERT INTO users (login, email, pass) VALUES (?, ?, ?)");
                $stmt->bind_param("sss", $login, $email, $hashed_password);
                
                if ($stmt->execute()) {
                    $reg_success = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏.';
                } else {
                    $reg_error = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ' . $conn->error;
                }
            }
            $stmt->close();
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    $login_error = '';
    if (isset($_POST['login'])) {
        $email = trim($_POST['auth_email']);
        $password = trim($_POST['auth_pass']);
        
        if (empty($email) || empty($password)) {
            $login_error = '–í–≤–µ–¥–∏—Ç–µ email –∏ –ø–∞—Ä–æ–ª—å!';
        } else {
            $stmt = $conn->prepare("SELECT id, login, pass FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();
            
            if ($result->num_rows === 1) {
                $user = $result->fetch_assoc();
                
                if (password_verify($password, $user['pass'])) {
                    $_SESSION['user_id'] = $user['id'];
                    $_SESSION['user_name'] = $user['login'];
                    $_SESSION['user_email'] = $email;
                } else {
                    $login_error = '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!';
                }
            } else {
                $login_error = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –Ω–µ –Ω–∞–π–¥–µ–Ω!';
            }
            $stmt->close();
        }
    }
    
    // –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    if (isset($_GET['logout'])) {
        session_destroy();
        header("Location: ".$_SERVER['PHP_SELF']);
        exit();
    }
    
    $logged_in = isset($_SESSION['user_id']);
    $user_name = $logged_in ? $_SESSION['user_name'] : '';
?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>HackerSpace</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="reset.css">
    <link rel="stylesheet" type="text/css" href="css/main.css">
    <style>
        /* –°—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è */
        .user-profile-container {
            position: fixed;
            left: 20px;
            bottom: 20px;
            z-index: 1000;
        }
        
        .user-profile-btn {
            background: #2c3e50;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 20px;
            cursor: pointer;
            display: flex;
            align-items: center;
            font-size: 14px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
        }
        
        .profile-dropdown {
            display: none;
            position: absolute;
            left: 0;
            bottom: 100%;
            background: white;
            min-width: 200px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            overflow: hidden;
            margin-bottom: 10px;
        }
        
        .profile-dropdown a {
            display: block;
            padding: 12px 16px;
            color: #333;
            text-decoration: none;
            transition: background 0.2s;
        }
        
        .profile-dropdown a:hover {
            background: #f5f5f5;
        }
        
        .profile-dropdown.show {
            display: block;
        }
        
        .profile-name {
            margin-left: 8px;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π */
        .error-message {
            color: red;
            margin: 10px 0;
        }
        
        .success-message {
            color: green;
            margin: 10px 0;
        }
    </style>
</head>
<body>


    <header>
        <img class="img_logo" src="">
        <a class="for_developers" href="HackerSpaceForDevelopers.html">–î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤</a>
        <a class="help" href="">–ü–æ–º–æ—â—å –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É</a>
        <div class="buttons">
                <button id="openModalBtn" class="reg_button">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
                <a class="demo_button" href="HackerSpacePageBot.html">–ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–µ–º–æ</a>
        </div>
    </header>

    <div class="container_hello">
        <div class="cont">
            <div>
                <h1>–ù–∞–≤—ã–∫–∏ –≥–æ–≤–æ—Ä—è—Ç –≥—Ä–æ–º—á–µ —Å–ª–æ–≤!</h1>
                <p>–ú—ã –ø–æ–º–æ–≥–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—è–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å–∏–ª—å–Ω–µ–π—à–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã. –ú—ã –ø–æ–º–æ–≥–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –æ—Ç—Ç–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏!</p>
                <div class="buttons">
                    <button id="openModalBtn2" class="reg_button">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
                    <a class="demo_button" href="HackerSpacePageBot.html">–ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–µ–º–æ</a>
                </div>
            </div>
        </div>
    </div>
    <div class="had_container">
        <p>–ë–æ–ª–µ–µ 35% —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –Ω–∞ –≤—Å–µ–º—É –º–∏—Ä—É –∏ 3000 –∫–æ–º–ø–∞–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É—é—Ç HackerSpace</p>
        <div class="logos">
            <img src="" alt="YPK">
            <img src="" alt="–Æ–¢–£">
        </div>
    </div>

    <!-- –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö) -->
    <?php if ($logged_in): ?>
    <div class="user-profile-container">
        <button class="user-profile-btn" id="profileBtn">
            üë§ <span class="profile-name"><?php echo htmlspecialchars($user_name); ?></span>
        </button>
        
        <div class="profile-dropdown" id="profileDropdown">
            <a href="my_profile.html">My Profile</a>
            <a href="settings.html">Settings</a>
            <a href="contact.html">Contact us</a>
            <a href="?logout">Log out</a>
        </div>
    </div>
    <?php endif; ?>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ -->
    <div id="modalBackground" class="modal-background">
        <div class="modal-content">
            <span class="close-btn">&times;</span>
            <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>
            <?php if (!empty($reg_error)): ?>
                <p class="error-message"><?php echo $reg_error; ?></p>
            <?php elseif (!empty($reg_success)): ?>
                <p class="success-message"><?php echo $reg_success; ?></p>
            <?php endif; ?>
            <form class="modal_form" method="POST" action="">
                <label class="surname_reg">–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
                <input class="surname_input_reg" type="text" name="auth_name" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è" required>
                <label class="email_reg">–í–≤–µ–¥–∏—Ç–µ –ø–æ—á—Ç—É</label>
                <input class="email_input_reg" type="email" name="auth_email" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É" required>
                <label class="pass_reg">–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
                <input class="pass_input_reg" type="password" name="auth_pass" placeholder="–í–∞—à –ø–∞—Ä–æ–ª—å" required>
                <button class="model_button_reg" type="submit" name="register">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
                <a id="openlogmodelbtn" class="Login">–í–æ–π—Ç–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–∫–∫–∞—É–Ω—Ç</a> 
            </form>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ -->
    <div id="modalBackground2" class="modal-background">
        <div class="modal-content">
            <span class="close-btn1">&times;</span>
            <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
            <?php if (!empty($login_error)): ?>
                <p class="error-message"><?php echo $login_error; ?></p>
            <?php endif; ?>
            <form class="modal_form" method="POST" action="">
                <label class="email_log">–í–≤–µ–¥–∏—Ç–µ –ø–æ—á—Ç—É</label>
                <input class="email_input_log" type="email" name="auth_email" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É" required>
                <label class="pass_log">–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
                <input class="pass_input_log" type="password" name="auth_pass" placeholder="–í–∞—à –ø–∞—Ä–æ–ª—å" required>
                <button class="model_button_reg" type="submit" name="login">–í–æ–π—Ç–∏</button>
                <a id="openregmodelbtn" class="Registr">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∑–¥–µ—Å—å!</a> 
            </form>
        </div>
    </div>

    <script>
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –ø—Ä–æ—Ñ–∏–ª—é
        document.getElementById('profileBtn')?.addEventListener('click', function() {
            document.getElementById('profileDropdown').classList.toggle('show');
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
        window.addEventListener('click', function(event) {
            if (!event.target.matches('#profileBtn') && !event.target.closest('.profile-dropdown')) {
                var dropdown = document.getElementById('profileDropdown');
                if (dropdown?.classList.contains('show')) {
                    dropdown.classList.remove('show');
                }
            }
        });
        
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏
        document.getElementById('openlogmodelbtn')?.addEventListener('click', function() {
            document.getElementById('modalBackground').style.display = 'none';
            document.getElementById('modalBackground2').style.display = 'flex';
        });
        
        document.getElementById('openregmodelbtn')?.addEventListener('click', function() {
            document.getElementById('modalBackground2').style.display = 'none';
            document.getElementById('modalBackground').style.display = 'flex';
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        document.querySelector('.close-btn')?.addEventListener('click', function() {
            document.getElementById('modalBackground').style.display = 'none';
        });
        
        document.querySelector('.close-btn1')?.addEventListener('click', function() {
            document.getElementById('modalBackground2').style.display = 'none';
        });
        
        // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ –∫–Ω–æ–ø–∫–∞–º
        document.getElementById('openModalBtn')?.addEventListener('click', function() {
            document.getElementById('modalBackground').style.display = 'flex';
        });
        
        document.getElementById('openModalBtn2')?.addEventListener('click', function() {
            document.getElementById('modalBackground').style.display = 'flex';
        });
    </script>
    <script src="js/regmodelwindow.js"></script>
    <script src="js/logmodelwindow.js"></script>
</body>
</html>